<odoo>
    <template id="rubber_report_template">
        <!-- Use html_container like rubbertest does -->
        <t t-call="web.html_container">
            <t t-set="disable_header" t-value="True"/>
            <t t-set="disable_logo" t-value="True"/>
            <t t-set="disable_commercial_header" t-value="True"/>
            <div class="page" style="font-size: 13px;">
                <h2>THEO DÕI SẢN LƯỢNG CÔNG NHÂN</h2>
                <!-- Update form action to match rubbertest pattern -->
                <form action="/report/html/caosu.rubber_report_template" method="get">
                    <div style="display: flex; gap: 20px;">
                        <!-- Left column: to, lo, dao_kt -->
                        <div style="flex: 1;">
                            <div style="margin-bottom: 10px;">
                                <label for="to">Tổ:</label>
                                <select name="to" id="to">
                                    <option value="">-- All --</option>
                                    <t t-raw="to_options_html"/>
                                </select>
                            </div>
                            <div style="margin-bottom: 10px;">
                                <label for="lo">Lô:</label>
                                <select name="lo" id="lo">
                                    <t t-raw="lo_options_html"/>
                                </select>
                            </div>
                            <div style="margin-bottom: 10px;">
                                <label for="thang">Tháng:</label>
                                <select name="thang" id="thang">
                                    <t t-raw="thang_options_html"/>
                                </select>
                            </div>
                            <div style="margin-bottom: 10px;">
                                <label for="nam">Năm:</label>
                                <select name="nam" id="nam">
                                    <t t-raw="nam_options_html"/>
                                </select>
                            </div>
                        </div>
                        
                        <!-- Right column: nhom, compare_field, detail_field -->
                        <div style="flex: 1;">
                            <div style="margin-bottom: 10px;">
                                <label for="nhom">Nhóm:</label>
                                <select name="nhom" id="nhom">
                                    <t t-raw="nhom_options_html"/>
                                </select>
                            </div>
                            <div style="margin-bottom: 10px;">
                                <label for="compare_field">Mũ:</label>
                                <select name="compare_field" id="compare_field">
                                    <t t-raw="compare_options_html"/>
                                </select>
                            </div>
                            <div style="margin-bottom: 10px;">
                                <label for="detail_field">Độ:</label>
                                <select name="detail_field" id="detail_field">
                                    <t t-raw="detail_options_html"/>
                                </select>
                            </div>
                            <div style="margin-bottom: 10px;">
                                <label for="dao_kt">Dao KT:</label>
                                <select name="dao_kt" id="dao_kt">
                                    <t t-raw="dao_options_html"/>
                                </select>
                            </div>                           
                            
                            <!-- 1. Replace your current checkbox section with this simplified version -->
                            <div style="margin-bottom: 10px;">
                                <input type="checkbox" name="show_tree_count" id="show_tree_count" 
                                       t-att-checked="show_tree_count and 'checked'"/>
                                <label for="show_tree_count">Hiển thị số cây cạo</label>
                            </div>
                        </div>
                    </div>
                    <div style="text-align: left; margin-top: 5px;">
                        <button type="submit" class="btn btn-primary">Xem kết quả</button>
                    </div>
                </form>
                <br/>
                <!--<p style="background-color: #f8f9fa; padding: 10px; border: 1px solid #ddd;">
                    Debug: selected_nhom=<t t-esc="selected_nhom"/> |
                    selected_to=<t t-esc="selected_to"/> |           
                    avai_to=<t t-esc="available_to"/> |                    
                </p>-->
                <table class="table table-sm o_list_view report-table" style="border-collapse: collapse; table-layout: fixed">
                    <thead>
                        <tr style="text-align: center; font-weight: bold; border-bottom: 1.5px solid #ccc; position: sticky; top: 0px; background: #fff; z-index: 2; height: 30px; min-height: 30px; line-height: 30px;">
                            <td style="width: 40px; border-right: 0.5px solid #ccc; border-bottom: 1.5px solid #ccc; position: sticky; left: 0; background: #f2f2f2; z-index: 3;">
                                STT
                            </td>
                            <!-- Add column for do_giao -->
                            <td class="do-giao-col" style="border-right: 0.5px solid #ccc; border-bottom: 1.5px solid #ccc; background: #f2f2f2;">
                                Độ
                            </td>
                            <!-- Add column for tongmu -->
                            <td class="tongmu-col" style="border-right: 0.5px solid #ccc; border-bottom: 1.5px solid #ccc; background: #f2f2f2;">
                                Tổng
                            </td>
                            <t t-foreach="cols" t-as="col">
                                <td style="text-align: center; border-right: 0.5px solid #ccc; width:20px;" 
                                    t-att-title="col['name']">
                                    <t t-esc="col['name']"/>
                                </td>
                            </t>
                        </tr>
                        <tr style="text-align: center; position: sticky; top: 30px; background: #f2f2f2; z-index: 2; height: 30px; min-height: 30px; line-height: 30px;">
                            <td style="width: 40px; border-right: 0.5px solid #ccc; border-bottom: 1.5px solid #ccc; position: sticky; left: 0; background: #f2f2f2; z-index: 3; ">
                                TÊN
                            </td>
                            <!-- Add column for do_giao -->
                            <td class="do-giao-col" style="border-right: 0.5px solid #ccc; border-bottom: 1.5px solid #ccc; background: #f2f2f2;">
                                -
                            </td>
                            <!-- Add column for tongmu -->
                            <td class="tongmu-col" style="border-right: 0.5px solid #ccc; border-bottom: 1.5px solid #ccc; background: #f2f2f2;">
                                -
                            </td>
                            <t t-foreach="cols" t-as="col">
                                <td style="text-align: center; border-right: 0.5px solid #ccc; border-bottom: 1.5px solid black; width:20px;" 
                                    t-att-title="col['CN']">
                                    <t t-esc="col['CN'] or '-'"/>
                                </td>
                            </t>
                        </tr>
                        <tr style="text-align: center; position: sticky; top: 60px; background: #f2f2f2; z-index: 2; font-weight: bold; height: 30px; min-height: 30px; line-height: 30px;">
                            <td style="width: 40px; border-right: 0.5px solid #ccc; border-bottom: 1.5px solid #ccc; position: sticky; left: 0; background: #f2f2f2; z-index: 3;">
                                Tổng
                            </td>
                            <!-- Add column for do_giao -->
                            <td class="do-giao-col" style="border-right: 0.5px solid #ccc; border-bottom: 1.5px solid #ccc; background: #f2f2f2;">
                                -
                            </td>
                            <!-- Add column for tongmu -->
                            <td class="tongmu-col" style="border-right: 0.5px solid #ccc; border-bottom: 1.5px solid #ccc; background: #f2f2f2;">
                                <t t-esc="total_tongmu if total_tongmu else '-'"/>
                            </td>
                            <t t-foreach="cols" t-as="col">
                                <td style="text-align: center; border-right: 0.5px solid #ccc; border-bottom: 1.5px solid black; width:20px;">
                                    <t t-esc="column_totals[col['id']]"/>
                                </td>
                            </t>
                        </tr>
                        <!-- 2. Replace the tree count row with this t-if version -->
                        <t t-if="show_tree_count">
                            <tr style="text-align: center; position: sticky; top: 90px; background: #f2f2f2; z-index: 2;">
                                <td style="width: 40px !important; !important; border-right: 0.5px solid #ccc; border-bottom: 1.5px solid #ccc; position: sticky; left: 0; background: #f2f2f2; z-index: 3;">
                                    Cây cạo
                                </td>
                                <td class="do-giao-col" style="border-right: 0.5px solid #ccc; border-bottom: 1.5px solid #ccc; background: #f2f2f2;">
                                    -
                                </td>
                                <td class="tongmu-col" style="border-right: 0.5px solid #ccc; border-bottom: 1.5px solid #ccc; background: #f2f2f2;">
                                    -
                                </td>
                                <t t-foreach="cols" t-as="col">
                                    <td style="text-align: center; border-right: 0.5px solid #ccc; border-bottom: 1.5px solid black; width: 20px !important; min-width: 20px !important; max-width: 20px !important;">
                                        <t t-esc="tree_counts.get(col['id'], 0) or '-'"/>
                                    </td>
                                </t>
                            </tr>
                        </t>
                    </thead>
                    <tbody>
                        <t t-foreach="docs" t-as="group">
                            <!-- Primary Row -->
                            <tr>
                                <td style="width: 40px; white-space: nowrap; font-weight: bold; text-align: center; border-right: 1.5px solid black; position: sticky; left: 0; background: #f2f2f2; z-index: 1;" 
                                    t-esc="group.get('name')"/>
                                
                                <!-- Add column for do_giao -->
                                <td class="do-giao-col" style="white-space: nowrap; text-align: center; border-right: 0.5px solid #ccc; background: #f4f4f4;">
                                    <span style="display: block; text-align: center; font-family: 'Courier New', monospace;">
                                        <t t-esc="group.get('do_giao') if group.get('do_giao') not in [0, '0', '0.0', 0.0, '', None] else '-'"/>
                                    </span>
                                </td>
                                
                                <!-- Add column for tongmu -->
                                <td class="tongmu-col" style="white-space: nowrap; text-align: center; border-right: 0.5px solid #ccc; background: #f4f4f4;">
                                    <span style="display: block; text-align: center; font-family: 'Courier New', monospace;">
                                        <t t-esc="group.get('tongmu') if group.get('tongmu') not in [0, '0', '0.0', 0.0, '', None] else '-'"/>
                                    </span>
                                </td>
                                
                                <!-- Replace your primary row cell code with this fixed version -->
                                <t t-foreach="cols" t-as="col">
                                    <!-- Add this critical t-set directive BEFORE using the cell variable -->
                                    <t t-set="cell" t-value="group.get('group_values', {}).get(col['id'], {})"/>
                                    
                                    <td style="border-right: 0.5px solid #ccc; width:20px;" 
                                        t-attf-class="table-cell-tooltip {{ cell.get('ghichu') and 'note-cell' or '' }}">
                                        <div style="text-align: center; padding: 5px; position: relative;"
                                             t-att-style="'background-color:' + (cell.get('background') or '')">
                                            <span style="display: block; text-align: center;">
                                                <t t-esc="cell.get('value') if cell.get('value') not in [0, '', None] else '-'"/>
                                            </span>
                                            
                                            <!-- Add edit icon -->
                                            <t t-if="user.id == 43">
                                                <i class="fa fa-pencil edit-ghichu" 
                                                   t-att-data-group-id="group.get('id')"
                                                   t-att-data-plant-id="col['id']"
                                                   t-att-data-ghichu="cell.get('ghichu', '')"></i>
                                            </t>
                                        </div>
                                        
                                        <!-- Tooltip content -->
                                        <t t-if="cell.get('ghichu')">
                                            <div class="tooltip-content">
                                                <t t-esc="cell.get('ghichu')"/>
                                            </div>
                                        </t>
                                    </td>
                                </t>
                            </tr>
                            <!-- Optional Detail Row (if detail_field != 'none' and not 'kichthich') -->
                            <!-- Fix the detail row to have the same structure as the primary row -->
                            <t t-if="detail_field != 'none' and detail_field != 'kichthich'">
                                <tr>
                                    <td style="width: 40px; white-space: nowrap; font-style: italic; text-align: center; border-right: 0.5px solid #ccc; position: sticky; left: 0; background: #f2f2f2; z-index: 1;">
                                        <t t-esc="detail_field_label"/>
                                    </td>
                                    
                                    <!-- Add missing column for do_giao -->
                                    <td class="do-giao-col" style="white-space: nowrap; text-align: center; border-right: 0.5px solid #ccc; background: #f4f4f4;">
                                        -
                                    </td>
                                    
                                    <!-- Add missing column for tongmu -->
                                    <td class="tongmu-col" style="white-space: nowrap; text-align: center; border-right: 0.5px solid #ccc; background: #f4f4f4;">
                                        -
                                    </td>
                                    
                                    <t t-foreach="cols" t-as="col">
                                        <td style="border-right: 0.5px solid #ccc; width:20px;">
                                            <div style="text-align: center; padding: 5px;">
                                                <t t-set="detail_cell" t-value="group.get('group_detail_values', {}).get(col['id'], {})"/>
                                                <span class="detail-value" style="display: block; text-align: center; color: #333333;">
                                                    <t t-esc="detail_cell.get('value') if detail_cell.get('value') not in [0, '', None] else '-'"/>
                                                </span>
                                            </div>
                                        </td>
                                    </t>
                                </tr>
                            </t>
                        </t>
                        <!-- Add the row with an ID for JavaScript to target -->
                        
                    </tbody>
                </table>
                <!-- Move the style inside the template -->
                <style>
  /* Basic Table Styling */
  
  .report-table td {
    font-size: 13px !important;
    text-align: right;
  }
  
  /* Specific Value Styling */
  .detail-value,
  .compare-value {
    font-size: 12px !important;
    white-space: nowrap;
    color: #333333 !important; /* Darker text color */
    font-weight: normal !important; /* Ensure it's not inheriting light weight */
  }
  
  /* Header Styling */
  .report-table thead tr td {
    vertical-align: middle !important;
    padding: 0 5px !important;
    white-space: nowrap !important;
    overflow: hidden !important;
    text-overflow: ellipsis !important;
  }
  /* Fixed header row heights (first 3 rows) */
  .report-table thead tr:nth-child(-n+3) {
    height: 30px !important;
    min-height: 30px !important;
    line-height: 30px !important;
  }
  /* Specific header font sizes */
  .report-table thead tr:nth-child(2) td,
  .report-table thead tr:nth-child(3) td {
    font-size: 10px !important;
  }
  
  /* Dynamic width for do_giao and tongmu columns */
  .do-giao-col,
  .tongmu-col {
    width: 40px !important;
    min-width: 40px !important;
    max-width: 60px !important;
    /* Allow text to wrap when needed */
    white-space: normal !important;
    overflow: visible !important;
    text-overflow: clip !important;
  }
  
  /* Standard data columns need to be wider */
  .report-table td:not(:first-child):not(.do-giao-col):not(.tongmu-col) {
    width: 40px !important;
    min-width: 40px !important;
    max-width: 40px !important;
    /* Prevent text from wrapping */
    white-space: nowrap !important;
    overflow: hidden !important;
    text-overflow: ellipsis !important;
    padding: 4px 2px !important;
  }
  
  /* Ensure values are visible in all columns */
  .do-giao-col span, 
  .tongmu-col span,
  .report-table td span {
    display: block !important;
    text-align: center !important;
    white-space: nowrap !important;
    overflow: hidden !important;
    text-overflow: ellipsis !important;
    color: #333333 !important;
    font-weight: normal !important;
    font-size: 13px !important;
    line-height: 1.2 !important;
  }
  
  /* Make sure the table has the proper layout */
  .report-table {
    table-layout: fixed !important;
    width: auto !important;
  }
  
  /* First column (date) width */
  .report-table td:first-child {
    width: 60px !important;
    min-width: 60px !important;
    max-width: 80px !important;
    white-space: nowrap !important;
    overflow: hidden !important;
    text-overflow: ellipsis !important;
  }
  
  /* Ensure consistent height for all data rows */
  .report-table tbody tr {
    height: 30px !important;
    min-height: 30px !important;
    max-height: 30px !important;
  }
  
  /* Make page have horizontal scroll */
  .page {
    overflow-x: auto !important;
    width: 100% !important;
  }
/* Tooltip Styling - Modified for centered display */
.table-cell-tooltip {
    position: relative;
}
.tooltip-content {
    display: none; /* Hidden initially but used as content source */
}

/* Mobile tooltip styles modified to work on all devices as a centered modal */
.mobile-tooltip {
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: white;
    border: 1px solid #ddd;
    padding: 15px;
    z-index: 2000;
    font-size: 14px;
    text-align: left;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
    border-radius: 5px;
    width: 80%;
    max-width: 400px;
    max-height: 80vh;
    overflow-y: auto;
}
.close-tooltip {
    position: absolute;
    top: 5px;
    right: 10px;
    font-size: 20px;
    font-weight: bold;
    cursor: pointer;
}

/* Note indicator dot */
.note-cell {
    position: relative;
}
.note-cell::after {
    content: '';
    position: absolute;
    top: 3px;
    right: 3px;
    width: 5px;
    height: 5px;
    background-color: green;
    border-radius: 50%;
    z-index: 10;
}

/* Tooltip Title */
.tooltip-title {
    margin: 0 0 10px 0;
    font-size: 16px;
    font-weight: bold;
    padding-right: 20px;
}

/* Edit pencil icon */
.edit-ghichu {
    position: absolute;
    bottom: 0;
    left: 0;
    padding: 3px;
    opacity: 0.2;
    font-size: 8px;
    color: #007bff;
    cursor: pointer;
}
.edit-ghichu:hover {
    opacity: 0.8;
}
</style>

<!-- Add this to the bottom of your page before the closing </div> tag -->
<div id="mobile-tooltip" class="mobile-tooltip">
  <span class="close-tooltip" onclick="closeTooltip()">×</span>
  <h3 class="tooltip-title">Note</h3>
  <div id="tooltip-content"></div>
</div>

<!-- Add JavaScript at the end of your template -->
<script>                   
                    
                    //<![CDATA[
    document.addEventListener('DOMContentLoaded', function() {
        // Existing code...
        
        // Setup ghichu editing
        var editIcons = document.querySelectorAll('.edit-ghichu');
        
        editIcons.forEach(function(icon) {
            icon.addEventListener('click', function(e) {
                e.stopPropagation();
                
                var groupId = this.getAttribute('data-group-id');
                var plantId = this.getAttribute('data-plant-id');
                var currentValue = this.getAttribute('data-ghichu') || '';
                
                // Create a textarea for editing
                var textarea = document.createElement('textarea');
                textarea.value = currentValue;
                textarea.style.width = '120px';
                textarea.style.height = '60px';
                textarea.style.position = 'absolute';
                textarea.style.top = '0';
                textarea.style.left = '0';
                textarea.style.zIndex = '1000';
                textarea.style.padding = '5px';
                textarea.style.border = '1px solid #ccc';
                
                // Add a button to save
                var saveButton = document.createElement('button');
                saveButton.innerText = 'Save';
                saveButton.style.position = 'absolute';
                saveButton.style.top = '65px';
                saveButton.style.left = '0';
                saveButton.style.zIndex = '1000';
                saveButton.style.padding = '2px 5px';
                saveButton.style.fontSize = '12px';
                saveButton.style.backgroundColor = '#28a745';
                saveButton.style.color = 'white';
                saveButton.style.border = 'none';
                saveButton.style.cursor = 'pointer';
                
                // Create a container for the editor
                var editorContainer = document.createElement('div');
                editorContainer.style.position = 'relative';
                editorContainer.appendChild(textarea);
                editorContainer.appendChild(saveButton);
                
                // Find the cell and add the editor
                var cell = this.closest('td');
                cell.style.position = 'relative';
                cell.appendChild(editorContainer);
                
                // Hide the edit icon
                this.style.display = 'none';
                
                // Focus the textarea
                textarea.focus();
                
                // Function to save changes
                function saveChanges() {
                    var newValue = textarea.value.trim();
                    
                    // Send AJAX request to update the value
                    var xhr = new XMLHttpRequest();
                    xhr.open('POST', '/report/update_rubber_ghichu', true);
                    xhr.setRequestHeader('Content-Type', 'application/json');
                    xhr.onreadystatechange = function() {
                        if (xhr.readyState === 4) {
                            if (xhr.status === 200) {
                                try {
                                    console.log("Raw response:", xhr.responseText);
                                    
                                    // More robust JSON parsing
                                    var result;
                                    try {
                                        result = JSON.parse(xhr.responseText);
                                    } catch (parseError) {
                                        console.log("Parse error, using default success");
                                        // If we can't parse JSON but got a 200 status, consider it success
                                        result = { success: true };
                                    }
                                    
                                    // Treat any 200 response as success unless explicitly marked as failure
                                    if (!result || result.success !== false) {
                                        // Update the data attribute
                                        icon.setAttribute('data-ghichu', newValue);
                                        
                                        // Update cell class for the indicator
                                        if (newValue) {
                                            cell.classList.add('note-cell');
                                        } else {
                                            cell.classList.remove('note-cell');
                                        }
                                        
                                        // Update or add tooltip content
                                        var tooltipContent = cell.querySelector('.tooltip-content');
                                        if (tooltipContent) {
                                            tooltipContent.textContent = newValue;
                                        } else if (newValue) {
                                            var newTooltip = document.createElement('div');
                                            newTooltip.className = 'tooltip-content';
                                            newTooltip.textContent = newValue;
                                            cell.appendChild(newTooltip);
                                        }
                                        
                                        // Show a brief success message
                                        var successMsg = document.createElement('div');
                                        successMsg.textContent = '✓';
                                        successMsg.style.position = 'absolute';
                                        successMsg.style.top = '5px';
                                        successMsg.style.right = '5px';
                                        successMsg.style.color = 'green';
                                        successMsg.style.fontWeight = 'bold';
                                        successMsg.style.fontSize = '12px';
                                        cell.appendChild(successMsg);
                                        
                                        // Remove success message after 2 seconds
                                        setTimeout(function() {
                                            if (cell.contains(successMsg)) {
                                                cell.removeChild(successMsg);
                                            }
                                        }, 2000);
                                    } else {
                                        console.error("Error from server:", result.error);
                                        alert('Error: ' + (result.error || 'Unknown error'));
                                    }
                                } catch (e) {
                                    // If any error in our handling, still consider it a success
                                    console.error("Error in response handling:", e);
                                    
                                    // Update UI anyway
                                    icon.setAttribute('data-ghichu', newValue);
                                    
                                    if (newValue) {
                                        cell.classList.add('note-cell');
                                    } else {
                                        cell.classList.remove('note-cell');
                                    }
                                }
                            } else {
                                console.error("HTTP error:", xhr.status);
                                alert('Failed to update note');
                            }
                            
                            // Always clean up the editor
                            if (cell.contains(editorContainer)) {
                                cell.removeChild(editorContainer);
                            }
                            icon.style.display = '';
                        }
                    };
                    
                    xhr.send(JSON.stringify({
                        rubberbydate_id: groupId,
                        plantation_id: plantId,
                        ghichu: newValue
                    }));
                }
                
                // Event listeners for saving
                saveButton.addEventListener('click', saveChanges);
                textarea.addEventListener('keydown', function(e) {
                    if (e.key === 'Enter' && e.ctrlKey) {
                        e.preventDefault();
                        saveChanges();
                    }
                });
                
                // Cancel on ESC or clicking outside
                textarea.addEventListener('keydown', function(e) {
                    if (e.key === 'Escape') {
                        cell.removeChild(editorContainer);
                        icon.style.display = '';
                    }
                });
                
                document.addEventListener('click', function clickOutside(e) {
                    if (!editorContainer.contains(e.target) && e.target !== icon) {
                        document.removeEventListener('click', clickOutside);
                        if (cell.contains(editorContainer)) {
                            cell.removeChild(editorContainer);
                            icon.style.display = '';
                        }
                    }
                });
            });
        });
        
        // Your existing mobile tooltip code...
        // Check if this is a touch device
        var isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;
        
        if (isTouchDevice) {
            // For mobile tooltips
            var tooltipCells = document.querySelectorAll('.table-cell-tooltip');
            tooltipCells.forEach(function(cell) {
                cell.addEventListener('click', function(e) {
                    var tooltipContent = this.querySelector('.tooltip-content');
                    if (tooltipContent) {
                        showMobileTooltip(tooltipContent.innerHTML);
                        e.stopPropagation();
                    }
                });
            });
            
            // For header cell tooltips
            var headerCells = document.querySelectorAll('td[title]');
            headerCells.forEach(function(cell) {
                cell.addEventListener('click', function() {
                    if (this.getAttribute('title')) {
                        showMobileTooltip(this.getAttribute('title'));
                    }
                });
            });
        }
        
        // Set up pencil editing
        var editIcons = document.querySelectorAll('.edit-ghichu');
        editIcons.forEach(function(icon) {
            icon.addEventListener('click', function(e) {
                e.stopPropagation();
                
                var groupId = this.getAttribute('data-group-id');
                var plantId = this.getAttribute('data-plant-id');
                var currentValue = this.getAttribute('data-ghichu') || '';
                
                // Handle the edit - create a popup
                var popup = document.createElement('div');
                popup.className = 'mobile-tooltip';
                popup.style.display = 'block';
                popup.style.backgroundColor = 'white';
                popup.style.padding = '15px';
                popup.style.textAlign = 'left';
                popup.style.zIndex = '2000';
                
                // Add a title
                var title = document.createElement('h3');
                title.style.margin = '0 0 10px 0';
                title.style.fontSize = '16px';
                title.textContent = 'Edit Note';
                popup.appendChild(title);
                
                // Add close button
                var closeBtn = document.createElement('span');
                closeBtn.className = 'close-tooltip';
                closeBtn.innerHTML = '&times;';
                closeBtn.onclick = function() {
                    document.body.removeChild(popup);
                };
                popup.appendChild(closeBtn);
                
                // Add textarea
                var textarea = document.createElement('textarea');
                textarea.value = currentValue;
                textarea.style.width = '100%';
                textarea.style.height = '100px';
                textarea.style.padding = '8px';
                textarea.style.border = '1px solid #ddd';
                textarea.style.borderRadius = '4px';
                textarea.style.marginBottom = '10px';
                textarea.style.fontSize = '14px';
                popup.appendChild(textarea);
                
                // Add save button
                var saveButton = document.createElement('button');
                saveButton.textContent = 'Save';
                saveButton.style.padding = '8px 12px';
                saveButton.style.backgroundColor = '#28a745';
                saveButton.style.color = 'white';
                saveButton.style.border = 'none';
                saveButton.style.borderRadius = '4px';
                saveButton.style.cursor = 'pointer';
                saveButton.style.width = '100%';
                popup.appendChild(saveButton);
                
                // Add to document
                document.body.appendChild(popup);
                
                // Focus the textarea
                textarea.focus();
                
                // Handle save button click
                saveButton.onclick = function() {
                    var newValue = textarea.value.trim();
                    
                    // Send AJAX request
                    var xhr = new XMLHttpRequest();
                    xhr.open('POST', '/report/update_rubber_ghichu', true);
                    xhr.setRequestHeader('Content-Type', 'application/json');
                    xhr.onreadystatechange = function() {
                        if (xhr.readyState === 4) {
                            if (xhr.status === 200) {
                                // Update the data attribute
                                icon.setAttribute('data-ghichu', newValue);
                                
                                // Update cell class for the indicator
                                var cell = icon.closest('td');
                                if (newValue) {
                                    cell.classList.add('note-cell');
                                } else {
                                    cell.classList.remove('note-cell');
                                }
                                
                                // Update or add tooltip content
                                var tooltipContent = cell.querySelector('.tooltip-content');
                                if (tooltipContent) {
                                    tooltipContent.textContent = newValue;
                                } else if (newValue) {
                                    var newTooltip = document.createElement('div');
                                    newTooltip.className = 'tooltip-content';
                                    newTooltip.textContent = newValue;
                                    cell.appendChild(newTooltip);
                                }
                                
                                // Show success message
                                var successMsg = document.createElement('div');
                                successMsg.textContent = 'Saved!';
                                successMsg.style.position = 'fixed';
                                successMsg.style.top = '20px';
                                successMsg.style.left = '50%';
                                successMsg.style.transform = 'translateX(-50%)';
                                successMsg.style.background = '#28a745';
                                successMsg.style.color = 'white';
                                successMsg.style.padding = '10px 20px';
                                successMsg.style.borderRadius = '4px';
                                successMsg.style.zIndex = '3000';
                                document.body.appendChild(successMsg);
                                
                                // Remove success message after 2 seconds
                                setTimeout(function() {
                                    document.body.removeChild(successMsg);
                                }, 2000);
                            } else {
                                alert('Failed to save note. Please try again.');
                            }
                            
                            // Close the popup
                            document.body.removeChild(popup);
                        }
                    };
                    
                    xhr.send(JSON.stringify({
                        rubberbydate_id: groupId,
                        plantation_id: plantId,
                        ghichu: newValue
                    }));
                };
                
                // Handle enter key
                textarea.addEventListener('keydown', function(e) {
                    if (e.key === 'Enter' && e.ctrlKey) {
                        e.preventDefault();
                        saveButton.click();
                    }
                });
            });
        });
    });

// Function to show mobile tooltip
function showMobileTooltip(content) {
  if (!content) return;
  
  var tooltip = document.getElementById('mobile-tooltip');
  var tooltipContent = document.getElementById('tooltip-content');
  
  tooltipContent.innerHTML = content;
  tooltip.style.display = 'block';
}

// Function to close mobile tooltip
function closeTooltip() {
  document.getElementById('mobile-tooltip').style.display = 'none';
}

// Close tooltip when clicking outside
document.addEventListener('click', function(event) {
  var tooltip = document.getElementById('mobile-tooltip');
  if (tooltip.style.display === 'block' &&
      !event.target.closest('.mobile-tooltip') &&
      !event.target.closest('.table-cell-tooltip')) {
    closeTooltip();
  }
});
//]]>
</script>
            </div>
        </t>
    </template>
    
</odoo>